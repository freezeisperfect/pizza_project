import inspect
from modules.log import log
from typing import Type


class Pizza:
    """
    –ö–ª–∞—Å—Å, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∏–π –ø–∏—Ü—Ü—É.

    Attributes
    ----------
    actual_pizza_sizes: list
        –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.

    Class attributes
    ----------------
    receipt: list[str]
        –†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞, –≥–¥–µ –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è
        –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º - —Å–ø–∏—Å–æ–∫ –∏–∑ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–∏—Ü—Ü—ã.
        –í –∫–ª–∞—Å—Å–µ Pizza –¥–ª—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–π –ø–∏—Ü—Ü—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ None.
    size: str
        –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫ –∑–∞–∫–∞–∑—É –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω 'XL'.
    emoji: str
        –≠–º–æ–¥–∑–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –ø–∏—Ü—Ü—ã.
        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'ü§î'.

    Methods
    -------
    __init__(self, size: str = 'XL', emoji: str = 'ü§î') -> None:
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –∏–Ω—Å—Ç–∞–Ω—Å –ø–∏—Ü—Ü—ã.
    __str__(self) -> str:
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞.
    __eq__(self, other) -> bool:
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–µ –ø–∏—Ü—Ü—ã –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤.
    cook(self) -> None:
        –ú–µ—Ç–æ–¥ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è,
        –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã.
    dict(self) -> dict[str, list[str]]:
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, –≥–¥–µ –∫–ª—é—á - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã,
        –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–µ —Ä–µ—Ü–µ–ø—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.
    """
    actual_pizza_sizes = ['L', 'XL']

    def __init__(self, size: str = 'XL', emoji: str = 'ü§î') -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –∏–Ω—Å—Ç–∞–Ω—Å –ø–∏—Ü—Ü—ã.

        Parameters
        ----------
        size: str
            –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω 'XL'.
        emoji: str
            –≠–º–æ–¥–∑–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∏–π –ø–∏—Ü—Ü—É. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω 'ü§î'.
        """
        if not isinstance(size, str) or not isinstance(emoji, str):
            raise ValueError
        if size not in self.actual_pizza_sizes:
            raise TypeError

        self.receipt = []
        self.size = size
        self.name = str(self)
        self.emoji = emoji

    def __str__(self) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞.

        Returns
        -------
        str
            –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        """
        return self.__class__.__name__

    def __eq__(self, other) -> bool:
        """
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–µ –ø–∏—Ü—Ü—ã –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤.

        Parameters
        ----------
        other: Pizza
            –ò–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞—Å—Å–∞ Pizza –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.

        Returns
        -------
        bool
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–∏—Ü—Ü—ã —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É, –∏–Ω–∞—á–µ - False.
        """
        if not isinstance(other, Pizza) or self.receipt is None:
            raise ValueError
        return self.name == other.name \
            and self.size == other.size \
            and set(self.receipt) == set(other.receipt)

    @log('üí® Cooked in {} sec!')
    def cook(self) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è,
        –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã.
        """
        print(f'ü•µ LET HIM COOK! (‚óï‚Äø‚óï) {self.name} {self.emoji} is cooking!')

    def dict(self) -> dict[str, list[str]]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, –≥–¥–µ –∫–ª—é—á - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã,
        –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–µ —Ä–µ—Ü–µ–ø—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞.

        Returns
        -------
        dict[str, list[str]]
            –°–ª–æ–≤–∞—Ä—å –≤–∏–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã: —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã.
        """
        return {self.name: self.receipt}


class Margherita(Pizza):
    """
    –ö–ª–∞—Å—Å, —Å–æ–∑–¥–∞—é—â–∏–π –ø–∏—Ü—Ü—É Margherita.
    """
    def __init__(self, pizza_size: str = 'XL', emoji: str = 'üßÄ'):
        super().__init__(pizza_size, emoji)
        self.receipt = ['tomato sauce', 'mozzarella', 'tomatoes']


class Pepperoni(Pizza):
    """
    –ö–ª–∞—Å—Å, —Å–æ–∑–¥–∞—é—â–∏–π –ø–∏—Ü—Ü—É Pepperoni.
    """
    def __init__(self, pizza_size: str = 'XL', emoji: str = 'üçï'):
        super().__init__(pizza_size, emoji)
        self.receipt = ['tomato sauce', 'mozzarella', 'pepperoni']


class Hawaiian(Pizza):
    """
    –ö–ª–∞—Å—Å, —Å–æ–∑–¥–∞—é—â–∏–π –ø–∏—Ü—Ü—É Hawaiian.
    """
    def __init__(self, pizza_size: str = 'XL', emoji: str = 'üçç'):
        super().__init__(pizza_size, emoji)
        self.receipt = ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']


def get_pizzas() -> dict[str, Type]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∫–ª–∞—Å—Å—ã –ø–∏—Ü—Ü, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤ –º–æ–¥—É–ª–µ (–∫—Ä–æ–º–µ –∫–ª–∞—Å—Å–∞-—Ä–æ–¥–∏—Ç–µ–ª—è Pizza).

    Returns
    -------
    dict[str, Type]
        –°–ª–æ–≤–∞—Ä—å –≤–∏–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã (–ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É):
        –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–∏—Ü—Ü—ã.
    """
    current_module = inspect.getmodule(inspect.currentframe())
    classes = {
        name.lower(): cls for name, cls in inspect.getmembers(current_module)
        if inspect.isclass(cls) and name != 'Pizza'
    }
    return classes


if __name__ == '__main__':  # pragma: no cover
    pizza = Pizza()
    print(str(pizza))
    my_pizza = Margherita()
    print(my_pizza.dict())
    my_pizza.cook()
    print(my_pizza.name)

    my_margherita = Margherita()
    print(my_margherita == my_pizza)
